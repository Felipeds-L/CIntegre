// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model School {
  id        Int    @id @default(autoincrement())
  cnpj      String
  student_number  Int
  score  Int
  schoolAction  SchoolAction[]
}

model Ong {
  id   Int    @id @default(autoincrement())
  description String
  year_started  Int
  ong_sustainable  Boolean
  social_medias SocialMedias[]
  cause Causes[]
  social_action SocialAction[]
}

model Address {
  id   Int    @id @default(autoincrement())
  street String
  number  Int
  cep  String
  complement  String?
  city    String
  state    String
  user User[]
}

model User {
  id   Int    @id @default(autoincrement())
  username String
  name  String
  email  String
  password String
  address_id Int
  address  Address   @relation(fields: [address_id], references: [id])
  phone_number  String
}

model Photo {
  id   Int    @id @default(autoincrement())
  photo_url String
}

model SocialMedias {
  id   Int    @id @default(autoincrement())
  ong_id  Int
  ong    Ong      @relation(fields: [ong_id], references: [id])
  link_social_media  String
}

model Causes {
  id   Int    @id @default(autoincrement())
  ong_id  Int
  ong    Ong      @relation(fields: [ong_id], references: [id])
  name  String
  description  String
  school_action SchoolAction[]
  social_action SocialAction[]
}

model SchoolAction {
  id   Int    @id @default(autoincrement())
  school_id  Int
  school    School      @relation(fields: [school_id], references: [id])
  causes_id   Int
  causes   Causes      @relation(fields: [causes_id], references: [id])
  status Status[]
  registers  String
  pontuation  Int //ong avalia + porcentagem da doacao
}

enum Status {
  open
  close
  other
}

model SocialAction {
  id     Int      @id @default(autoincrement())
  causes_id   Int
  causes   Causes      @relation(fields: [causes_id], references: [id])
  ong_id  Int
  ong    Ong      @relation(fields: [ong_id], references: [id])
  cover_photo  String //url
  title  String
  descricao String
  tipe  Tipes[]
  area_expertise AreaExpertise[]
  status Status[]
  pontuation Int // 100/200 nao mostrar
}

enum Tipes {
  donation
  volunteer_work
}

enum AreaExpertise {
  tecnology
  healty
  gastronomy
  social_services
  fashion
}